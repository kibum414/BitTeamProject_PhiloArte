{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ArtService } from 'webapp/art';\nexport const getArtList = createAsyncThunk(\"ART_LIST\", async page => {\n  const response = await ArtService.list(page);\n  return response.data;\n});\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\", async args => {\n  console.log('REGISTER : ' + JSON.stringify(args));\n  const response = await ArtService.register(args);\n  return response.data;\n});\nexport const getArtUpload = createAsyncThunk(\"ART_UPLOAD\", async args => {\n  console.log('UPLOAD : ' + JSON.stringify(args));\n  const response = await ArtService.upload(args);\n  return response.data;\n});\nexport const getArtRead = createAsyncThunk(\"ART_READ\", async args => {\n  const response = await ArtService.read(args);\n  return response.data;\n});\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\", async args => {\n  const response = await ArtService.modify(args);\n  return response.data;\n});\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\", async args => {\n  const response = await ArtService.del(args);\n  return response.data;\n});\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    art: {},\n    category: ''\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getArtList.fulfilled, (state, {\n      payload\n    }) => {\n      state.pageResult = payload;\n      console.log(state.pageResult);\n    }).addCase(getArtRegister.fulfilled, (state, {\n      payload\n    }) => {\n      alert(`${payload}번 게시물 등록 완료 !`);\n    }).addCase(getArtUpload.fulfilled, (state, {\n      payload\n    }) => {\n      alert(`${payload} 파일 등록 완료 !`);\n    }).addCase(getArtRead.fulfilled, (state, {\n      payload\n    }) => {\n      state.art = payload;\n      console.log(state.art);\n    }).addCase(getArtModify.fulfilled, (state, {\n      payload\n    }) => {}).addCase(getArtDelete.fulfilled, (state, {\n      payload\n    }) => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = artSlice;\nexport const {} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/reducer/art.reducer.js"],"names":["createAsyncThunk","createSlice","ArtService","getArtList","page","response","list","data","getArtRegister","args","console","log","JSON","stringify","register","getArtUpload","upload","getArtRead","read","getArtModify","modify","getArtDelete","del","artSlice","name","initialState","pageResult","dtoList","pageList","start","end","prev","next","art","category","reducers","extraReducers","builder","addCase","fulfilled","state","payload","alert","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ArtService } from 'webapp/art'\n\nexport const getArtList = createAsyncThunk(\"ART_LIST\",\n  async (page) => {\n    const response = await ArtService.list(page)\n\n    return response.data\n  }\n)\n\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\",\n  async (args) => {\n    console.log('REGISTER : ' + JSON.stringify(args))\n    const response = await ArtService.register(args)\n\n    return response.data\n  }\n)\n\nexport const getArtUpload = createAsyncThunk(\"ART_UPLOAD\",\n  async (args) => {\n    console.log('UPLOAD : ' + JSON.stringify(args))\n    const response = await ArtService.upload(args)\n\n    return response.data\n  }\n)\n\nexport const getArtRead = createAsyncThunk(\"ART_READ\",\n  async (args) => {\n    const response = await ArtService.read(args)\n\n    return response.data\n  }\n)\n\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\",\n  async (args) => {\n    const response = await ArtService.modify(args)\n\n    return response.data\n  }\n)\n\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\",\n  async (args) => {\n    const response = await ArtService.del(args)\n\n    return response.data\n  }\n)\n\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    art: {},\n    category: '',\n    \n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getArtList.fulfilled, (state, { payload }) => {\n        state.pageResult = payload\n        console.log(state.pageResult)\n      })\n      .addCase(getArtRegister.fulfilled, (state, { payload }) => {\n        alert(`${payload}번 게시물 등록 완료 !`)\n      })\n      .addCase(getArtUpload.fulfilled, (state, { payload }) => {\n        alert(`${payload} 파일 등록 완료 !`)\n      })\n      .addCase(getArtRead.fulfilled, (state, { payload }) => {\n        state.art = payload\n        console.log(state.art)\n      })\n      .addCase(getArtModify.fulfilled, (state, { payload }) => {\n\n      })\n      .addCase(getArtDelete.fulfilled, (state, { payload }) => {\n\n      })\n  }\n})\n\nconst { actions, reducer } = artSlice\nexport const { } = actions\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}