{"ast":null,"code":"var _jsxFileName = \"/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/component/Modify/ModifyUpload.js\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ArtService } from 'webapp/art';\nimport { addFileList } from 'webapp/art/reducer/art.reducer';\nimport ModifyFile from './ModifyFile';\n\nconst ModifyUpload = ({\n  cref,\n  getUploadFiles,\n  fileParam = []\n}) => {\n  const dispatch = useDispatch();\n  const fileList = useSelector(state => state.arts.fileList);\n  console.log(\"fname: \" + fileList.file);\n  const [files, setFiles] = useState([]);\n  const [uploadResult, setUploadResult] = useState(fileParam);\n\n  const uploadFile = async e => {\n    e.preventDefault();\n    console.dir(e.target.files);\n    const formData = new FormData();\n    const files = e.target.files;\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    }\n\n    ArtService.artUpload(formData).then(res => {\n      console.log(\"res: \", res);\n      res.data.forEach(uploadFileInfo => {\n        uploadResult.push(uploadFileInfo);\n        dispatch(addFileList({\n          uuid: uploadFileInfo.uuid,\n          file: uploadFileInfo\n        }));\n      });\n      console.log(\"uploadResult Before\", uploadResult);\n      setUploadResult(uploadResult.slice(0));\n      console.log(\"uploadResult After\", uploadResult);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    className: \"dark-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"\\uD30C\\uC77C \\uCCA8\\uBD80\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    accept: \"image/*\",\n    className: \"md-input style-02 input_white\",\n    id: \"files\",\n    multiple: true,\n    \"data-error\": \"\\uC791\\uD488 \\uD30C\\uC77C\\uC744 \\uCCA8\\uBD80\\uD574\\uC8FC\\uC138\\uC694.\",\n    onChange: e => uploadFile(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), fileList === null || fileList === void 0 ? void 0 : fileList.map(fileObj => {\n    return /*#__PURE__*/React.createElement(ModifyFile, Object.assign({\n      key: fileObj.uuid\n    }, fileObj.file, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }));\n  }))));\n};\n\nexport default ModifyUpload;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/component/Modify/ModifyUpload.js"],"names":["React","useImperativeHandle","useState","useDispatch","useSelector","ArtService","addFileList","ModifyFile","ModifyUpload","cref","getUploadFiles","fileParam","dispatch","fileList","state","arts","console","log","file","files","setFiles","uploadResult","setUploadResult","uploadFile","e","preventDefault","dir","target","formData","FormData","i","length","append","artUpload","then","res","data","forEach","uploadFileInfo","push","uuid","slice","map","fileObj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,SAAS,GAAG;AAApC,CAAD,KAA8C;AAEjE,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,QAAQ,CAACK,IAAjC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAACS,SAAD,CAAhD;;AAGA,QAAMY,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,OAAO,CAACU,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASR,KAArB;AAEA,UAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMV,KAAK,GAAGK,CAAC,CAACG,MAAF,CAASR,KAAvB;;AAEA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBb,KAAK,CAACW,CAAD,CAA9B;AACD;;AAEDzB,IAAAA,UAAU,CAAC4B,SAAX,CAAqBL,QAArB,EACGM,IADH,CACQC,GAAG,IAAI;AACXnB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBkB,GAArB;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,cAAc,IAAI;AACjCjB,QAAAA,YAAY,CAACkB,IAAb,CAAkBD,cAAlB;AAEA1B,QAAAA,QAAQ,CAACN,WAAW,CAAC;AAAEkC,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAvB;AAA6BtB,UAAAA,IAAI,EAAEoB;AAAnC,SAAD,CAAZ,CAAR;AACD,OAJD;AAKAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,YAAnC;AACAC,MAAAA,eAAe,CAACD,YAAY,CAACoB,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCI,YAAlC;AACH,KAXD;AAYD,GAxBD;;AA0BA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,SAAS,EAAC,+BAJZ;AAKE,IAAA,EAAE,EAAC,OALL;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,kBAAW,uEAPb;AAQE,IAAA,QAAQ,EAAEG,CAAC,IAAID,UAAU,CAACC,CAAD,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAcGX,QAdH,aAcGA,QAdH,uBAcGA,QAAQ,CAAE6B,GAAV,CAAcC,OAAO,IAAI;AACxB,wBACE,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,OAAO,CAACH;AAAzB,OAAmCG,OAAO,CAACzB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD,GAJA,CAdH,CADF,CADF,CADF;AA0BD,CA9DD;;AAgEA,eAAeV,YAAf","sourcesContent":["import React, { useImperativeHandle, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ArtService } from 'webapp/art'\nimport { addFileList } from 'webapp/art/reducer/art.reducer'\nimport ModifyFile from './ModifyFile'\n\nconst ModifyUpload = ({ cref, getUploadFiles, fileParam = [] }) => {\n\n  const dispatch = useDispatch()\n  const fileList = useSelector(state => state.arts.fileList)\n  console.log(\"fname: \" + fileList.file)\n\n  const [files, setFiles] = useState([])\n  const [uploadResult, setUploadResult] = useState(fileParam)\n\n\n  const uploadFile = async (e) => {\n    e.preventDefault()\n\n    console.dir(e.target.files)\n\n    const formData = new FormData()\n    const files = e.target.files\n    \n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i])\n    }\n\n    ArtService.artUpload(formData)\n      .then(res => {\n        console.log(\"res: \", res)\n        res.data.forEach(uploadFileInfo => {\n          uploadResult.push(uploadFileInfo)\n\n          dispatch(addFileList({ uuid: uploadFileInfo.uuid, file: uploadFileInfo }))\n        })\n        console.log(\"uploadResult Before\", uploadResult)\n        setUploadResult(uploadResult.slice(0))\n        console.log(\"uploadResult After\", uploadResult)\n    })\n  }\n\n  return (\n    <>\n      <div className=\"col-md-12 col-sm-12\">\n        <div className=\"form-group\">\n          <label htmlFor=\"message\" className=\"dark-color\">\n            파일 첨부\n          </label>\n          <input\n            type=\"file\"\n            name=\"files\"\n            accept=\"image/*\"\n            className=\"md-input style-02 input_white\"\n            id=\"files\"\n            multiple={true}\n            data-error=\"작품 파일을 첨부해주세요.\"\n            onChange={e => uploadFile(e)}\n          />\n          {fileList?.map(fileObj => {\n            return (\n              <ModifyFile key={fileObj.uuid} {...fileObj.file} />\n            )\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ModifyUpload"]},"metadata":{},"sourceType":"module"}