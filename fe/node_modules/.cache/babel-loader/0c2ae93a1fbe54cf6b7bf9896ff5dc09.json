{"ast":null,"code":"var _jsxFileName = \"/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/component/Register/ArtUpload.js\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ArtService } from 'webapp/art';\nimport { addFileList } from 'webapp/art/reducer/art.reducer';\nimport ArtFile from './ArtFile';\n\nconst ArtUpload = ({\n  cref,\n  getUploadFiles,\n  fileParam = []\n}) => {\n  const dispatch = useDispatch();\n  const fileList = useSelector(state => state.arts.fileList);\n  const [files, setFiles] = useState([]);\n  const [uploadResult, setUploadResult] = useState(fileParam);\n  useImperativeHandle(cref, () => ({\n    send() {\n      getUploadFiles(uploadResult);\n      setFiles([]);\n      setUploadResult([]);\n    }\n\n  }));\n\n  const uploadFile = async e => {\n    e.preventDefault();\n    console.dir(e.target.files);\n    const formData = new FormData();\n    const files = e.target.files;\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    }\n\n    console.log(\"formData: \", formData);\n    ArtService.artUpload(formData).then(res => {\n      console.log(\"res: \", res);\n      res.data.forEach(uploadFileInfo => {\n        uploadResult.push(uploadFileInfo);\n        dispatch(addFileList({\n          uuid: uploadFileInfo.uuid,\n          file: uploadFileInfo\n        }));\n      });\n      console.log(\"uploadResult Before\", uploadResult);\n      setUploadResult(uploadResult.slice(0));\n      console.log(\"uploadResult After\", uploadResult);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container dark-color\",\n    style: {\n      marginBottom: \"40px\",\n      color: \"#24182e\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"font-20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"\\uCCA8\\uBD80\\uD30C\\uC77C\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    onChange: e => uploadFile(e),\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), fileList === null || fileList === void 0 ? void 0 : fileList.map(fileObj => {\n    return /*#__PURE__*/React.createElement(ArtFile, Object.assign({\n      key: fileObj.uuid\n    }, fileObj.file, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }));\n  }))));\n};\n\nexport default ArtUpload;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/component/Register/ArtUpload.js"],"names":["React","useImperativeHandle","useState","useDispatch","useSelector","ArtService","addFileList","ArtFile","ArtUpload","cref","getUploadFiles","fileParam","dispatch","fileList","state","arts","files","setFiles","uploadResult","setUploadResult","send","uploadFile","e","preventDefault","console","dir","target","formData","FormData","i","length","append","log","artUpload","then","res","data","forEach","uploadFileInfo","push","uuid","file","slice","marginBottom","color","map","fileObj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,SAAS,GAAG;AAApC,CAAD,KAA8C;AAE9D,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACS,SAAD,CAAhD;AAEAV,EAAAA,mBAAmB,CAACQ,IAAD,EAAO,OAAO;AAC/BW,IAAAA,IAAI,GAAG;AACLV,MAAAA,cAAc,CAACQ,YAAD,CAAd;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD;;AAL8B,GAAP,CAAP,CAAnB;;AAQA,QAAME,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASV,KAArB;AAEA,UAAMW,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMZ,KAAK,GAAGM,CAAC,CAACI,MAAF,CAASV,KAAvB;;AAEA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACc,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBf,KAAK,CAACa,CAAD,CAA9B;AACD;;AACDL,IAAAA,OAAO,CAACQ,GAAR,CAAY,YAAZ,EAA0BL,QAA1B;AAEAtB,IAAAA,UAAU,CAAC4B,SAAX,CAAqBN,QAArB,EACGO,IADH,CACQC,GAAG,IAAI;AACXX,MAAAA,OAAO,CAACQ,GAAR,CAAY,OAAZ,EAAqBG,GAArB;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,cAAc,IAAI;AACjCpB,QAAAA,YAAY,CAACqB,IAAb,CAAkBD,cAAlB;AAEA1B,QAAAA,QAAQ,CAACN,WAAW,CAAC;AAACkC,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAtB;AAA4BC,UAAAA,IAAI,EAAEH;AAAlC,SAAD,CAAZ,CAAR;AACD,OAJD;AAKAd,MAAAA,OAAO,CAACQ,GAAR,CAAY,qBAAZ,EAAmCd,YAAnC;AACAC,MAAAA,eAAe,CAACD,YAAY,CAACwB,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAlB,MAAAA,OAAO,CAACQ,GAAR,CAAY,oBAAZ,EAAkCd,YAAlC;AACH,KAXD;AAaD,GA1BD;;AA4BA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEyB,MAAAA,YAAY,EAAE,MAAhB;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAGtB,CAAD,IAAOD,UAAU,CAACC,CAAD,CAA3D;AAAgE,IAAA,QAAQ,EAAE,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGT,QAJH,aAIGA,QAJH,uBAIGA,QAAQ,CAAEgC,GAAV,CAAcC,OAAO,IAAI;AACxB,wBACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAIA,OAAO,CAACN;AAAxB,OAAmCM,OAAO,CAACL,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD,GAJA,CAJH,CADF,CADF,CADF;AAgBD,CA3DD;;AA6DA,eAAejC,SAAf","sourcesContent":["import React, { useImperativeHandle, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ArtService } from 'webapp/art'\nimport { addFileList } from 'webapp/art/reducer/art.reducer'\nimport ArtFile from './ArtFile'\n\nconst ArtUpload = ({ cref, getUploadFiles, fileParam = [] }) => {\n  \n  const dispatch = useDispatch()\n  const fileList = useSelector(state => state.arts.fileList)\n  const [files, setFiles] = useState([])\n  const [uploadResult, setUploadResult] = useState(fileParam)\n  \n  useImperativeHandle(cref, () => ({\n    send() {\n      getUploadFiles(uploadResult)\n      setFiles([])\n      setUploadResult([])\n    }\n  }))\n\n  const uploadFile = async (e) => {\n    e.preventDefault()\n\n    console.dir(e.target.files)\n\n    const formData = new FormData()\n    const files = e.target.files\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i])\n    }\n    console.log(\"formData: \", formData)\n\n    ArtService.artUpload(formData)\n      .then(res => {\n        console.log(\"res: \", res)\n        res.data.forEach(uploadFileInfo => {\n          uploadResult.push(uploadFileInfo)\n          \n          dispatch(addFileList({uuid: uploadFileInfo.uuid, file: uploadFileInfo}))\n        })\n        console.log(\"uploadResult Before\", uploadResult)\n        setUploadResult(uploadResult.slice(0))\n        console.log(\"uploadResult After\", uploadResult)\n    })\n\n  }\n\n  return (\n    <>\n      <div className=\"container dark-color\" style={{ marginBottom: \"40px\", color: \"#24182e\" }} >\n        <div className=\"\">\n          <label className=\"font-20px\">첨부파일</label>\n          <input type=\"file\" name=\"files\" onChange={(e) => uploadFile(e)} multiple={true}\n          />\n          {fileList?.map(fileObj => {\n            return (\n              <ArtFile key= { fileObj.uuid } {...fileObj.file} />\n            )\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ArtUpload"]},"metadata":{},"sourceType":"module"}