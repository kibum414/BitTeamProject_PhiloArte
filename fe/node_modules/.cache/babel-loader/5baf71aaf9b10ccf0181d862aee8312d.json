{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ArtService } from 'webapp/art';\nexport const getArtList = createAsyncThunk(\"ART_LIST\", async page => {\n  console.log(\"getArtList\", page);\n  const response = await ArtService.artList(page);\n  return response.data;\n});\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\", async args => {\n  for (var pair of args.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n\n  const response = await ArtService.artRegister(args);\n  return response.data;\n});\nexport const getArtUpload = createAsyncThunk(\"ART_UPLOAD\", async args => {\n  console.log('UPLOAD : ' + JSON.stringify(args));\n  const response = await ArtService.artUpload(args);\n  return response.data;\n});\nexport const getArtRead = createAsyncThunk(\"ART_READ\", async args => {\n  const response = await ArtService.artRead(args);\n  return response.data;\n});\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\", async args => {\n  const response = await ArtService.artModify(args);\n  return response.data;\n});\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\", async args => {\n  const response = await ArtService.artDelete(args);\n  return response.data;\n});\n\nconst isRejectedAction = action => action.type.endsWith('rejected');\n\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    fileList: [],\n    type: '',\n    keyword: '',\n    category: ''\n  },\n  reducers: {\n    changeSearch: (state, {\n      payload\n    }) => {\n      state.type = payload.type;\n      state.keyword = payload.keyword;\n    },\n    addFileList: (state, {\n      payload\n    }) => {\n      state.fileList.push(payload);\n    },\n    changeFileList: (state, {\n      payload\n    }) => {\n      var _state$fileList;\n\n      console.log(\"changeFileList payload\", payload);\n      const filteredFiles = (_state$fileList = state.fileList) === null || _state$fileList === void 0 ? void 0 : _state$fileList.filter(file => file.uuid !== payload.file.uuid);\n      console.log(\"changeFileList filteredFiles\", filteredFiles);\n      filteredFiles.push({\n        uuid: payload.file.uuid,\n        file: payload.file\n      });\n      state.fileList = filteredFiles;\n      console.log(\"changeFileList fileList\", fileList);\n    },\n    deleteFileList: (state, {\n      payload\n    }) => {\n      const findFileIdx = state.fileList.findIndex(file => file.uuid === payload.file.uuid);\n      state.fileList.splice(findFileIdx, 1);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getArtList.fulfilled, (state, {\n      payload\n    }) => {\n      state.pageResult = payload;\n      console.log(state.pageResult);\n    }).addCase(getArtRegister.fulfilled, (state, {\n      payload\n    }) => {\n      alert(`${payload}번 게시물 등록 완료 !`);\n    }).addCase(getArtUpload.fulfilled, (state, {\n      payload\n    }) => {\n      alert(`${payload[0]} 파일 등록 완료 !`);\n    }).addCase(getArtRead.fulfilled, (state, {\n      payload\n    }) => {\n      state.current = payload;\n      console.log(`바바바: ` + JSON.stringify(state.current.files.length));\n    }).addCase(getArtModify.fulfilled, (state, {\n      payload\n    }) => {}).addCase(getArtDelete.fulfilled, (state, {\n      payload\n    }) => {}).addMatcher(isRejectedAction).addDefaultCase().addDefaultCase((state, payload) => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = artSlice;\nexport const {\n  changeSearch,\n  addFileList,\n  changeFileList,\n  deleteFileList\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/reducer/art.reducer.js"],"names":["createAsyncThunk","createSlice","ArtService","getArtList","page","console","log","response","artList","data","getArtRegister","args","pair","entries","artRegister","getArtUpload","JSON","stringify","artUpload","getArtRead","artRead","getArtModify","artModify","getArtDelete","artDelete","isRejectedAction","action","type","endsWith","artSlice","name","initialState","pageResult","dtoList","pageList","start","end","prev","next","fileList","keyword","category","reducers","changeSearch","state","payload","addFileList","push","changeFileList","filteredFiles","filter","file","uuid","deleteFileList","findFileIdx","findIndex","splice","extraReducers","builder","addCase","fulfilled","alert","current","files","length","addMatcher","addDefaultCase","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ArtService } from 'webapp/art'\n\nexport const getArtList = createAsyncThunk(\"ART_LIST\",\n  async (page) => {\n    console.log(\"getArtList\", page)\n    const response = await ArtService.artList(page)\n\n    return response.data\n  }\n)\n\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\",\n  async (args) => {\n    for (var pair of args.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n    const response = await ArtService.artRegister(args)\n\n    return response.data\n  }\n)\n\nexport const getArtUpload = createAsyncThunk(\"ART_UPLOAD\",\n  async (args) => {\n    console.log('UPLOAD : ' + JSON.stringify(args))\n    const response = await ArtService.artUpload(args)\n\n    return response.data\n  }\n)\n\nexport const getArtRead = createAsyncThunk(\"ART_READ\",\n  async (args) => {\n    const response = await ArtService.artRead(args)\n\n    return response.data\n  }\n)\n\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\",\n  async (args) => {\n    const response = await ArtService.artModify(args)\n\n    return response.data\n  }\n)\n\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\",\n  async (args) => {\n    const response = await ArtService.artDelete(args)\n\n    return response.data\n  }\n)\n\nconst isRejectedAction = action => (action.type.endsWith('rejected'))\n\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    fileList: [],\n    type: '',\n    keyword: '',\n    category: '',\n    \n  },\n  reducers: {\n    changeSearch: (state, { payload }) => {\n      state.type = payload.type\n      state.keyword = payload.keyword\n    },\n    addFileList: (state, { payload }) => {\n      state.fileList.push(payload)\n    },\n    changeFileList: (state, { payload }) => {\n      console.log(\"changeFileList payload\", payload)\n      \n      const filteredFiles = state.fileList?.filter(file => file.uuid !== payload.file.uuid)\n      \n      console.log(\"changeFileList filteredFiles\", filteredFiles)\n\n      filteredFiles.push({ uuid: payload.file.uuid, file: payload.file })\n      state.fileList = filteredFiles\n      \n      console.log(\"changeFileList fileList\", fileList)\n    },\n    deleteFileList: (state, { payload }) => {\n      const findFileIdx = state.fileList.findIndex(file => file.uuid === payload.file.uuid)\n\n      state.fileList.splice(findFileIdx, 1)\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getArtList.fulfilled, (state, { payload }) => {\n        state.pageResult = payload\n        console.log(state.pageResult)\n      })\n      .addCase(getArtRegister.fulfilled, (state, { payload }) => {\n        alert(`${payload}번 게시물 등록 완료 !`)\n      })\n      .addCase(getArtUpload.fulfilled, (state, { payload }) => {\n        alert(`${payload[0]} 파일 등록 완료 !`)\n      })\n      .addCase(getArtRead.fulfilled, (state, { payload }) => {\n        state.current = payload\n        console.log(`바바바: ` + JSON.stringify(state.current.files.length))\n      })\n      .addCase(getArtModify.fulfilled, (state, { payload }) => {\n\n      })\n      .addCase(getArtDelete.fulfilled, (state, { payload }) => {\n\n      })\n      .addMatcher(isRejectedAction).addDefaultCase()\n      .addDefaultCase((state, payload) => { })\n  }\n})\n\nconst { actions, reducer } = artSlice\nexport const { changeSearch, addFileList, changeFileList, deleteFileList } = actions\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}