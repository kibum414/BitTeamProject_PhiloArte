{"ast":null,"code":"var _jsxFileName = \"/Users/superstar_pkb/project/Bitcamp Team Project V2/fe/src/components/Counters/CounterRowOne.js\";\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst CounterRowOne = ({\n  data,\n  type,\n  classes\n}) => {\n  const [viewed, setViewed] = useState(false);\n\n  const viewChangeHandler = isVisible => {\n    if (isVisible) setViewed(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row \" + classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, data ? data.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 col-sm-6 xs-mb-40 sm-mb-20 xs-ml-40\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counter-type-2 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${item.icon} default-color font-60px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"display-block mt-0 mb-0 \" + (type === \"dark\" ? \"white-color\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"counter font-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VisibilitySensor, {\n    onChange: viewChangeHandler,\n    delayedCall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    delay: 0.02,\n    duration: 4,\n    end: viewed ? item.value : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mt-0 font-600 \" + (type === \"dark\" ? \"white-color\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, item.title)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-50 pb-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"font-800 default-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Something is missing\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-30 red-color text-decoration-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"CounterRowOne \"), \"component require a [data] parameter and needs to be an array of objects\")));\n};\n\nexport default CounterRowOne;","map":{"version":3,"sources":["/Users/superstar_pkb/project/Bitcamp Team Project V2/fe/src/components/Counters/CounterRowOne.js"],"names":["React","useState","CountUp","VisibilitySensor","CounterRowOne","data","type","classes","viewed","setViewed","viewChangeHandler","isVisible","map","item","id","icon","value","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMS,iBAAiB,GAAIC,SAAD,IAAe;AACvC,QAAIA,SAAJ,EAAeF,SAAS,CAAC,IAAD,CAAT;AAChB,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE,SAASF,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,GACHA,IAAI,CAACO,GAAL,CAAUC,IAAD,iBACP;AACE,IAAA,SAAS,EAAC,8CADZ;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,GAAED,IAAI,CAACE,IAAK,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,SAAS,EACP,8BACCT,IAAI,KAAK,MAAT,GAAkB,aAAlB,GAAkC,EADnC,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEI,iBAA5B;AAA+C,IAAA,WAAW,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE,IADT;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,GAAG,EAAEF,MAAM,GAAGK,IAAI,CAACG,KAAR,GAAgB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CANF,CAFF,eAkBE;AACE,IAAA,SAAS,EACP,oBAAoBV,IAAI,KAAK,MAAT,GAAkB,aAAlB,GAAkC,EAAtD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGO,IAAI,CAACI,KALR,CAlBF,CAJF,CADF,CADG,gBAmCH;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAG,IAAA,SAAS,EAAC,2CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,6EAFF,CApCJ,CADF;AA+CD,CAtDD;;AAwDA,eAAeb,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst CounterRowOne = ({ data, type, classes }) => {\n  const [viewed, setViewed] = useState(false);\n\n  const viewChangeHandler = (isVisible) => {\n    if (isVisible) setViewed(true);\n  };\n\n  return (\n    <div className={\"row \" + classes}>\n      {data ? (\n        data.map((item) => (\n          <div\n            className=\"col-md-3 col-sm-6 xs-mb-40 sm-mb-20 xs-ml-40\"\n            key={item.id}\n          >\n            <div className=\"counter-type-2 relative\">\n              <i className={`${item.icon} default-color font-60px`}></i>\n              <h3\n                className={\n                  \"display-block mt-0 mb-0 \" +\n                  (type === \"dark\" ? \"white-color\" : \"\")\n                }\n              >\n                <span className=\"counter font-600\">\n                  <VisibilitySensor onChange={viewChangeHandler} delayedCall>\n                    <CountUp\n                      delay={0.02}\n                      duration={4}\n                      end={viewed ? item.value : 0}\n                    />\n                  </VisibilitySensor>\n                </span>\n              </h3>\n              <h5\n                className={\n                  \"mt-0 font-600 \" + (type === \"dark\" ? \"white-color\" : \"\")\n                }\n              >\n                {item.title}\n              </h5>\n            </div>\n          </div>\n        ))\n      ) : (\n        <div className=\"text-center pt-50 pb-50\">\n          <h1 className=\"font-800 default-color\">Something is missing</h1>\n          <p className=\"mt-30 red-color text-decoration-underline\">\n            <b>CounterRowOne </b>component require a [data] parameter and needs\n            to be an array of objects\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CounterRowOne;\n"]},"metadata":{},"sourceType":"module"}