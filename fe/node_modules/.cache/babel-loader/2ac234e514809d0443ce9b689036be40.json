{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ArtService } from 'webapp/art';\nexport const getArtList = createAsyncThunk(\"ART_LIST\", async page => {\n  const response = await ArtService.list(page);\n  console.log(`response.data: ` + response.data);\n  return response.data;\n});\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\", async args => {\n  const response = await ArtService.register(args);\n  return response.data;\n});\nexport const getArtRead = createAsyncThunk(\"ART_READ\", async args => {\n  const response = await ArtService.read(args);\n  return response.data;\n});\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\", async args => {\n  const response = await ArtService.modify(args);\n  return response.data;\n});\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\", async args => {\n  const response = await ArtService.del(args);\n  return response.data;\n});\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    msg: ''\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getArtList.fulfilled, (state, {\n      payload\n    }) => {\n      console.log(payload);\n      state.pageResult = payload;\n      console.log(state.pageResult);\n    }).addCase(getArtRegister.fulfilled, (state, {\n      payload\n    }) => {\n      alert(`등록 : ${payload}`);\n    }).addCase(getArtRead.fulfilled, (state, {\n      payload\n    }) => {\n      return [...payload];\n    }).addCase(getArtModify.fulfilled, (state, {\n      payload\n    }) => {}).addCase(getArtDelete.fulfilled, (state, {\n      payload\n    }) => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = artSlice;\nexport const {} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/art/reducer/art.reducer.js"],"names":["createAsyncThunk","createSlice","ArtService","getArtList","page","response","list","console","log","data","getArtRegister","args","register","getArtRead","read","getArtModify","modify","getArtDelete","del","artSlice","name","initialState","pageResult","dtoList","pageList","start","end","prev","next","msg","reducers","extraReducers","builder","addCase","fulfilled","state","payload","alert","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ArtService } from 'webapp/art'\n\nexport const getArtList = createAsyncThunk(\"ART_LIST\",\n  async (page) => {\n    const response = await ArtService.list(page)\n\n    console.log(`response.data: ` + response.data)\n\n    return response.data\n  }\n)\n\nexport const getArtRegister = createAsyncThunk(\"ART_REGISTER\",\n  async (args) => {\n    const response = await ArtService.register(args)\n\n    return response.data\n  }\n)\n\nexport const getArtRead = createAsyncThunk(\"ART_READ\",\n  async (args) => {\n    const response = await ArtService.read(args)\n\n    return response.data\n  }\n)\n\nexport const getArtModify = createAsyncThunk(\"ART_MODIFY\",\n  async (args) => {\n    const response = await ArtService.modify(args)\n\n    return response.data\n  }\n)\n\nexport const getArtDelete = createAsyncThunk(\"ART_DELETE\",\n  async (args) => {\n    const response = await ArtService.del(args)\n\n    return response.data\n  }\n)\n\nconst artSlice = createSlice({\n  name: 'arts',\n  initialState: {\n    pageResult: {\n      dtoList: [],\n      page: 1,\n      pageList: [],\n      start: 1,\n      end: 1,\n      prev: false,\n      next: false\n    },\n    msg: ''\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getArtList.fulfilled, (state, { payload }) => {\n        console.log(payload)\n        state.pageResult = payload\n        console.log(state.pageResult)\n      })\n      .addCase(getArtRegister.fulfilled, (state, { payload }) => {\n        alert(`등록 : ${payload}`)\n      })\n      .addCase(getArtRead.fulfilled, (state, { payload }) => {\n        return [...payload]\n      })\n      .addCase(getArtModify.fulfilled, (state, { payload }) => {\n\n      })\n      .addCase(getArtDelete.fulfilled, (state, { payload }) => {\n\n      })\n  }\n})\n\nconst { actions, reducer } = artSlice\nexport const { } = actions\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}