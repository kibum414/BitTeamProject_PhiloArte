{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { UserService } from 'users/index';\nexport const getUserList = createAsyncThunk(\"users/findAll\", async () => {\n  const response = await UserService.findAll();\n  return response.data;\n});\n\nconst isRejectAction = action => action.type.endsWith('rejected');\n\nexport const getUserSignUp = createAsyncThunk(\"users/signup\", async input => {\n  const response = await UserService.signUp(input);\n  return response.data;\n});\nexport const getUserSignIn = createAsyncThunk(\"users/signin\", async login => {\n  const response = await UserService.login(login);\n  console.log(\"response: \" + login);\n  return response.data;\n});\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUserList.fulfilled, (state, {\n      payload\n    }) => {\n      return [...payload];\n    }).addCase(getUserSignUp.fulfilled, (state, {\n      payload\n    }) => {\n      return [...payload];\n    }).addCase(getUserSignIn.fulfilled, (state, {\n      payload\n    }) => {}) // .addCase(getUserEdit.fulfilled,(state,{payload})=>{\n    //     return[...payload]\n    // })\n    // .addCase(getUserDelete,(state, {payload})=>{\n    //     return [...payload]\n    // })\n    .addMatcher(isRejectAction, () => {}).addDefaultCase((state, payload) => {});\n  }\n});\nconst {\n  reducer\n} = userSlice;\nexport default reducer;","map":{"version":3,"sources":["/Users/superstar_pkb/project/BitCamp Team Project V2/fe/src/webapp/users/reducer/user.reducer.js"],"names":["axios","createAsyncThunk","createSlice","UserService","getUserList","response","findAll","data","isRejectAction","action","type","endsWith","getUserSignUp","input","signUp","getUserSignIn","login","console","log","userSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","addMatcher","addDefaultCase","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAGA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,eAAD,EAC3C,YAAS;AACL,QAAMI,QAAQ,GAAG,MAAMF,WAAW,CAACG,OAAZ,EAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACH,CAJ0C,CAApC;;AAMP,MAAMC,cAAc,GAACC,MAAM,IACrBA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqB,UAArB,CADN;;AAGA,OAAO,MAAMC,aAAa,GAAGX,gBAAgB,CACzC,cADyC,EAEzC,MAAOY,KAAP,IAAgB;AACZ,QAAMR,QAAQ,GAAG,MAAMF,WAAW,CAACW,MAAZ,CAAmBD,KAAnB,CAAvB;AACA,SAAOR,QAAQ,CAACE,IAAhB;AACH,CALwC,CAAtC;AAOP,OAAO,MAAMQ,aAAa,GAAGd,gBAAgB,CAAC,cAAD,EAC7C,MAAMe,KAAN,IAAc;AACV,QAAMX,QAAQ,GAAG,MAAMF,WAAW,CAACa,KAAZ,CAAkBA,KAAlB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,KAA3B;AACA,SAAOX,QAAQ,CAACE,IAAhB;AACH,CAL4C,CAAtC;AAQP,MAAMY,SAAS,GAAGjB,WAAW,CAAC;AAC1BkB,EAAAA,IAAI,EAAG,OADmB;AAE1BC,EAAAA,YAAY,EAAG,EAFW;AAG1BC,EAAAA,QAAQ,EAAC,EAHiB;AAI1BC,EAAAA,aAAa,EAAIC,OAAD,IAAW;AACvBA,IAAAA,OAAO,CACNC,OADD,CACSrB,WAAW,CAACsB,SADrB,EACgC,CAACC,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AAChD,aAAO,CAAC,GAAGA,OAAJ,CAAP;AACH,KAHD,EAICH,OAJD,CAISb,aAAa,CAACc,SAJvB,EAIiC,CAACC,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AACjD,aAAO,CAAC,GAAGA,OAAJ,CAAP;AACH,KAND,EAOCH,OAPD,CAOSV,aAAa,CAACW,SAPvB,EAOiC,CAACC,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB,CAEpD,CATD,EAUA;AACA;AACA;AACA;AACA;AACA;AAfA,KAgBCC,UAhBD,CAgBYrB,cAhBZ,EAgB2B,MAAI,CAAE,CAhBjC,EAiBCsB,cAjBD,CAiBgB,CAACH,KAAD,EAAQC,OAAR,KAAkB,CAAE,CAjBpC;AAkBH;AAvByB,CAAD,CAA7B;AA4BA,MAAM;AAACG,EAAAA;AAAD,IAAWZ,SAAjB;AACA,eAAeY,OAAf","sourcesContent":["import axios from 'axios'\r\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {UserService} from 'users/index'\r\n\r\n\r\nexport const getUserList = createAsyncThunk(\"users/findAll\",\r\nasync()=>{\r\n    const response = await UserService.findAll()\r\n    return response.data\r\n})\r\n\r\nconst isRejectAction=action=>\r\n     (action.type.endsWith('rejected'))\r\n\r\nexport const getUserSignUp = createAsyncThunk(\r\n    \"users/signup\",\r\n    async (input) =>{\r\n        const response = await UserService.signUp(input)\r\n        return response.data\r\n    })\r\n\r\nexport const getUserSignIn = createAsyncThunk(\"users/signin\",\r\nasync(login)=>{\r\n    const response = await UserService.login(login)\r\n    console.log(\"response: \" + login)\r\n    return response.data\r\n})\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name : 'users',\r\n    initialState : [],\r\n    reducers:{},\r\n    extraReducers : (builder)=>{\r\n        builder\r\n        .addCase(getUserList.fulfilled, (state, {payload})=>{\r\n            return [...payload]\r\n        })\r\n        .addCase(getUserSignUp.fulfilled,(state, {payload})=>{\r\n            return [...payload]\r\n        })\r\n        .addCase(getUserSignIn.fulfilled,(state, {payload})=>{\r\n            \r\n        })\r\n        // .addCase(getUserEdit.fulfilled,(state,{payload})=>{\r\n        //     return[...payload]\r\n        // })\r\n        // .addCase(getUserDelete,(state, {payload})=>{\r\n        //     return [...payload]\r\n        // })\r\n        .addMatcher(isRejectAction,()=>{})\r\n        .addDefaultCase((state, payload)=>{})\r\n    },\r\n})             \r\n\r\n\r\n\r\nconst {reducer}= userSlice\r\nexport default reducer\r\n\r\n"]},"metadata":{},"sourceType":"module"}